---
import type { Props } from '../props';

import { experimental_AstroContainer } from "astro/container";
import EditLink from 'virtual:starlight/components/EditLink';
import LastUpdated from 'virtual:starlight/components/LastUpdated';
import Pagination from 'virtual:starlight/components/Pagination';

const container = await experimental_AstroContainer.create();
const options = { props: { ...Astro.props }, locals: { ...Astro.locals } };

// Render
const editLinkHTML = await container.renderToString(EditLink, options);
const lastUpdatedHTML = await container.renderToString(LastUpdated, options);
const paginationHTML = await container.renderToString(Pagination, options);

// Check
const footerSet = (editLinkHTML + lastUpdatedHTML + paginationHTML).trim();
---

{footerSet && (
    <footer class="sl-flex" set:html={paginationHTML}>
        <div class="meta sl-flex" set:html={editLinkHTML + lastUpdatedHTML}>
        </div>
    </footer>
)}


<style>
	footer {
		flex-direction: column;
		gap: 1.5rem;
	}
    .meta {
		gap: 0.75rem 3rem;
		justify-content: space-between;
		flex-wrap: wrap;
		margin-top: 3rem;
		font-size: var(--sl-text-sm);
		color: var(--sl-color-gray-3);
	}
	.meta > :global(p:only-child) {
		margin-inline-start: auto;
	}
</style>
